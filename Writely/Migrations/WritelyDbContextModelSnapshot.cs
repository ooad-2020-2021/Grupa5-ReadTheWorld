// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Writely.Data;

namespace Writely.Migrations
{
    [DbContext(typeof(WritelyDbContext))]
    partial class WritelyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Writely.Models.Korisnik", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<string>("DodijeljeneTitule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("WritelyMoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Writely.Models.PrijavaKorisnika", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("PošiljalacId")
                        .HasColumnType("int");

                    b.Property<int>("PrijavaId")
                        .HasColumnType("int");

                    b.Property<string>("Sadržaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PošiljalacId");

                    b.ToTable("PrijavaKorisnika");
                });

            modelBuilder.Entity("Writely.Models.PrijavaRada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPrijave")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("PošiljalacId")
                        .HasColumnType("int");

                    b.Property<int>("RadId")
                        .HasColumnType("int");

                    b.Property<string>("Sadržaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PošiljalacId");

                    b.ToTable("PrijavaRada");
                });

            modelBuilder.Entity("Writely.Models.Rad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Sadržaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TakmičenjeId")
                        .HasColumnType("int");

                    b.Property<string>("tagovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ŽanrId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AutorId");

                    b.HasIndex("TakmičenjeId");

                    b.ToTable("Rad");
                });

            modelBuilder.Entity("Writely.Models.Recenzija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("RadId")
                        .HasColumnType("int");

                    b.Property<int>("ocjena")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RadId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("Writely.Models.Takmičenje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("DozvoljeneKategorije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Takmičenje");
                });

            modelBuilder.Entity("Writely.Models.PrijavaKorisnika", b =>
                {
                    b.HasOne("Writely.Models.Korisnik", "Pošiljalac")
                        .WithMany()
                        .HasForeignKey("PošiljalacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Writely.Models.PrijavaRada", b =>
                {
                    b.HasOne("Writely.Models.Korisnik", "Pošiljalac")
                        .WithMany()
                        .HasForeignKey("PošiljalacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Writely.Models.Rad", b =>
                {
                    b.HasOne("Writely.Models.Korisnik", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Writely.Models.Takmičenje", "PrijavljenoTakmičenje")
                        .WithMany("radovi")
                        .HasForeignKey("TakmičenjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Writely.Models.Recenzija", b =>
                {
                    b.HasOne("Writely.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Writely.Models.Rad", "OcijenjeniRad")
                        .WithMany()
                        .HasForeignKey("RadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
